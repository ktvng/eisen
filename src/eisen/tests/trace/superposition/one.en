fn test(b: obj, mut B: ptr) {
    let a = obj()
    let mut A = ptr(a)

    let var p = a
    let mut var P = A

    if (true) {
        p = b
        P = B
    }

    @compiler_assert(reference_has_dependencies, p, a, b)
    P.o = p
}

struct obj {
    x: int

    create() -> new self: obj {
        self.x = 0
    }
}

struct ptr {
    var o: obj

    create(o: obj) -> new self: ptr {
        self.o = o
    }
}

fn main() {
    let b = obj()
    let mut B = ptr(b)
}

/// [Test]
/// name = "trace/superposition/one"
/// info = """\
///     Superposition test
/// """

/// [Expects]
/// success = true
/// output = ""
