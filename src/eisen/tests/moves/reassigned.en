struct obj {
    x: int

    create(x: int) -> new self: obj {
        self.x = x
    }
}

fn taker(move o: obj) {
    return
}

fn say(o: obj) {
    print("%i", o.x)
}

fn main() {
    let o = obj(0)
    let o2 = obj(1)
    let var v = o
    taker(o)
    v = o2
    say(v)
    let k = v
    v.x + 1
}

/// [Test]
/// name = "moves/reassigned"
/// info = "Reassigning an expired reference is ok"

/// [Expects]
/// success = true
/// output = "1"
