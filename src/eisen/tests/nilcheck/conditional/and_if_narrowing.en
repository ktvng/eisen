struct obj {
    x: int

    create(x: int) -> self: new obj {
        self.x = x
    }
}

fn main() {
    let a = obj(1)
    var? p = maybe(a)

    if(p != nil and p.use()) {
        p.use()
    }
}

fn use(a: obj) -> x: bool {
    print("%i", a.x)
    x = true
}

fn maybe(a: obj?) -> r: obj? {
    r = a
}

/// [Test]
/// name = "nilcheck/conditional/and_if_narrowing"
/// info = "Narrowing of an 'and' expression extends to body of if statement"

/// [Expects]
/// success = true
/// output = "11"
