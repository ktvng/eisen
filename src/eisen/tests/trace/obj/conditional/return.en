struct obj {
    x: int

    create() -> self: new obj {
        self.x = 0
    }
}

struct ptr {
    var o: obj

    create(o: obj) -> self: new ptr {
        self.o = o
    }
}

fn main() {
    let a, b = obj(), obj()
    let p = ptr(a)
    if (true) {
        p.o = b
        return
    }

    @compiler_assert(object_has_dependencies, p, "o: a")
}

/// [Test]
/// name = "trace/obj/conditional/return"
/// info = "Compiler detects that conditonal branches which return do not change dependencys afterwards"

/// [Expects]
/// success = true
/// output = ""
