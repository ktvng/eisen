trait sayer {
    say: (mut Self) -> void
}

struct obj {
    x: int

    create() -> new self: obj {
        self.x = 0
    }
}

impl sayer for obj {
    fn say(mut self: obj) {
        print("hello %i", self.x)
    }
}

fn main() {
    let mut o = obj()
    o.as(sayer).say()
}

/// [Test]
/// name = "traits/bindings2"
/// info = "correct bindings succeed"

/// [Expects]
/// success = true
/// output = "hello 0"
