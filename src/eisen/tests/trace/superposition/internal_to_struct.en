struct obj {
    x: int

    create(x: int) -> new self: obj {
        self.x = x
    }
}

struct box {
    var o: obj

    create(o: obj) -> new self: box {
        self.o = o
    }
}

struct ptr {
    var o: obj
    mut var b: box

    create(o: obj, mut b: box) -> new self: ptr {
        self.o = o
        self.b = b
    }
}

fn one(mut p: ptr, o: obj) {
    let o1 = obj(1)
    let mut b1 = box(o1)
    let mut p1 = ptr(o1, b1)

    if (true) {
        p1.o = o
        p1.b = p.b
    }

    p1.b.o = p1.o
}

fn main() {
    let o = obj(0)
    let mut b = box(o)
    let mut p = ptr(o, b)
    // one(p, o)
    print("%i", p.o.x)
}

/// [Test]
/// name = "trace/superposition/internal_to_struct"
/// info = """\
///     A superposition inside of a single struct.
/// """

/// [Expects]
/// success = true
/// output = ""
