diff --git a/dist/client/theme-default/components/VPContent.vue b/dist/client/theme-default/components/VPContent.vue
index c0bd52f6228b9a0f188aeeb126c58ee79d890672..37c217bf8dbf68199e69e06a34f3adc71aa5fe1d 100644
--- a/dist/client/theme-default/components/VPContent.vue
+++ b/dist/client/theme-default/components/VPContent.vue
@@ -20,7 +20,6 @@ const NotFound = inject('NotFound')
     id="VPContent"
     :class="{
       'has-sidebar': hasSidebar,
-      'is-home': frontmatter.layout === 'home'
     }"
   >
     <NotFound v-if="route.component === NotFound" />
@@ -58,15 +57,16 @@ const NotFound = inject('NotFound')
   width: 100%;
 }
 
-.VPContent.is-home {
-  width: 100%;
-  max-width: 100%;
-}
-
 .VPContent.has-sidebar {
   margin: 0;
 }
 
+@media (min-width: 768px) {
+  .VPContent {
+    width: 100vw;
+  }
+}
+
 @media (min-width: 960px) {
   .VPContent {
     padding-top: var(--vp-nav-height);
diff --git a/dist/client/theme-default/components/VPContent.vue.orig b/dist/client/theme-default/components/VPContent.vue.orig
new file mode 100644
index 0000000000000000000000000000000000000000..c0bd52f6228b9a0f188aeeb126c58ee79d890672
--- /dev/null
+++ b/dist/client/theme-default/components/VPContent.vue.orig
@@ -0,0 +1,87 @@
+<script setup lang="ts">
+import { useRoute } from 'vitepress'
+import { useData } from '../composables/data.js'
+import { useSidebar } from '../composables/sidebar.js'
+import VPPage from './VPPage.vue'
+import VPHome from './VPHome.vue'
+import VPDoc from './VPDoc.vue'
+import { inject } from 'vue'
+
+const route = useRoute()
+const { frontmatter } = useData()
+const { hasSidebar } = useSidebar()
+
+const NotFound = inject('NotFound')
+</script>
+
+<template>
+  <div
+    class="VPContent"
+    id="VPContent"
+    :class="{
+      'has-sidebar': hasSidebar,
+      'is-home': frontmatter.layout === 'home'
+    }"
+  >
+    <NotFound v-if="route.component === NotFound" />
+
+    <VPPage v-else-if="frontmatter.layout === 'page'" />
+
+    <VPHome v-else-if="frontmatter.layout === 'home'">
+      <template #home-hero-before><slot name="home-hero-before" /></template>
+      <template #home-hero-image><slot name="home-hero-image" /></template>
+      <template #home-hero-after><slot name="home-hero-after" /></template>
+      <template #home-features-before><slot name="home-features-before" /></template>
+      <template #home-features-after><slot name="home-features-after" /></template>
+    </VPHome>
+
+    <VPDoc v-else>
+      <template #doc-footer-before><slot name="doc-footer-before" /></template>
+      <template #doc-before><slot name="doc-before" /></template>
+      <template #doc-after><slot name="doc-after" /></template>
+
+      <template #aside-top><slot name="aside-top" /></template>
+      <template #aside-outline-before><slot name="aside-outline-before" /></template>
+      <template #aside-outline-after><slot name="aside-outline-after" /></template>
+      <template #aside-ads-before><slot name="aside-ads-before" /></template>
+      <template #aside-ads-after><slot name="aside-ads-after" /></template>
+      <template #aside-bottom><slot name="aside-bottom" /></template>
+    </VPDoc>
+  </div>
+</template>
+
+<style scoped>
+.VPContent {
+  flex-grow: 1;
+  flex-shrink: 0;
+  margin: var(--vp-layout-top-height, 0px) auto 0;
+  width: 100%;
+}
+
+.VPContent.is-home {
+  width: 100%;
+  max-width: 100%;
+}
+
+.VPContent.has-sidebar {
+  margin: 0;
+}
+
+@media (min-width: 960px) {
+  .VPContent {
+    padding-top: var(--vp-nav-height);
+  }
+
+  .VPContent.has-sidebar {
+    margin: var(--vp-layout-top-height, 0px) 0 0;
+    padding-left: var(--vp-sidebar-width);
+  }
+}
+
+@media (min-width: 1440px) {
+  .VPContent.has-sidebar {
+    padding-right: calc((100vw - var(--vp-layout-max-width)) / 2);
+    padding-left: calc((100vw - var(--vp-layout-max-width)) / 2 + var(--vp-sidebar-width));
+  }
+}
+</style>
diff --git a/dist/client/theme-default/components/VPFooter.vue b/dist/client/theme-default/components/VPFooter.vue
index 49b26bcda5f991194986a8e8313f3c98ff1b1372..0de66c86b2294c5a48a4ae61eaa1962faeaf4044 100644
--- a/dist/client/theme-default/components/VPFooter.vue
+++ b/dist/client/theme-default/components/VPFooter.vue
@@ -30,6 +30,7 @@ const { hasSidebar } = useSidebar()
 
 @media (min-width: 768px) {
   .VPFooter {
+    width: 100vw;
     padding: 32px;
   }
 }
diff --git a/dist/client/theme-default/components/VPLocalNav.vue b/dist/client/theme-default/components/VPLocalNav.vue
index 1f829cc2dda3b4abee9a1b825b2e4213cd4de58b..a44a77a985526800affeda6d33685caf9e6ea852 100644
--- a/dist/client/theme-default/components/VPLocalNav.vue
+++ b/dist/client/theme-default/components/VPLocalNav.vue
@@ -79,6 +79,10 @@ function scrollToTop() {
 }
 
 @media (min-width: 768px) {
+  .VPLocalNav {
+    width: 100vw;
+  }
+
   .menu {
     padding: 0 32px;
   }
diff --git a/dist/client/theme-default/components/VPLocalNav.vue.orig b/dist/client/theme-default/components/VPLocalNav.vue.orig
new file mode 100644
index 0000000000000000000000000000000000000000..1f829cc2dda3b4abee9a1b825b2e4213cd4de58b
--- /dev/null
+++ b/dist/client/theme-default/components/VPLocalNav.vue.orig
@@ -0,0 +1,114 @@
+<script lang="ts" setup>
+import { useData } from '../composables/data.js'
+import { useSidebar } from '../composables/sidebar.js'
+import VPIconAlignLeft from './icons/VPIconAlignLeft.vue'
+
+defineProps<{
+  open: boolean
+}>()
+
+defineEmits<{
+  (e: 'open-menu'): void
+}>()
+
+const { theme } = useData()
+const { hasSidebar } = useSidebar()
+
+function scrollToTop() {
+  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' })
+}
+</script>
+
+<template>
+  <div v-if="hasSidebar" class="VPLocalNav">
+    <button
+      class="menu"
+      :aria-expanded="open"
+      aria-controls="VPSidebarNav"
+      @click="$emit('open-menu')"
+    >
+      <VPIconAlignLeft class="menu-icon" />
+      <span class="menu-text">
+        {{ theme.sidebarMenuLabel || 'Menu' }}
+      </span>
+    </button>
+
+    <a class="top-link" href="#" @click="scrollToTop">
+      {{ theme.returnToTopLabel || 'Return to top' }}
+    </a>
+  </div>
+</template>
+
+<style scoped>
+.VPLocalNav {
+  position: sticky;
+  top: 0;
+  /*rtl:ignore*/
+  left: 0;
+  z-index: var(--vp-z-index-local-nav);
+  display: flex;
+  justify-content: space-between;
+  align-items: center;
+  border-bottom: 1px solid var(--vp-c-gutter);
+  padding-top: var(--vp-layout-top-height, 0px);
+  width: 100%;
+  background-color: var(--vp-local-nav-bg-color);
+  transition: border-color 0.5s, background-color 0.5s;
+}
+
+@media (min-width: 960px) {
+  .VPLocalNav {
+    display: none;
+  }
+}
+
+.menu {
+  display: flex;
+  align-items: center;
+  padding: 12px 24px 11px;
+  line-height: 24px;
+  font-size: 12px;
+  font-weight: 500;
+  color: var(--vp-c-text-2);
+  transition: color 0.5s;
+}
+
+.menu:hover {
+  color: var(--vp-c-text-1);
+  transition: color 0.25s;
+}
+
+@media (min-width: 768px) {
+  .menu {
+    padding: 0 32px;
+  }
+}
+
+.menu-icon {
+  margin-right: 8px;
+  width: 16px;
+  height: 16px;
+  fill: currentColor;
+}
+
+.top-link {
+  display: block;
+  padding: 12px 24px 11px;
+  line-height: 24px;
+  font-size: 12px;
+  font-weight: 500;
+  color: var(--vp-c-text-2);
+  transition: color 0.5s;
+}
+
+.top-link:hover {
+  color: var(--vp-c-text-1);
+  transition: color 0.25s;
+}
+
+@media (min-width: 768px) {
+  .top-link {
+    padding: 12px 32px 11px;
+  }
+}
+</style>
diff --git a/dist/client/theme-default/components/VPNav.vue b/dist/client/theme-default/components/VPNav.vue
index 1f7b554d092a8515a47edad7dd2093650cbbfcf5..2e9b6ce7beec84ac6c5d76beab1fb0e33bdac9e2 100644
--- a/dist/client/theme-default/components/VPNav.vue
+++ b/dist/client/theme-default/components/VPNav.vue
@@ -36,6 +36,12 @@ provide('close-screen', closeScreen)
   transition: background-color 0.5s;
 }
 
+@media (min-width: 768px) {
+  .VPNav {
+    width: 100vw;
+  }
+}
+
 @media (min-width: 960px) {
   .VPNav {
     position: fixed;
diff --git a/dist/client/theme-default/components/VPNav.vue.orig b/dist/client/theme-default/components/VPNav.vue.orig
new file mode 100644
index 0000000000000000000000000000000000000000..1f7b554d092a8515a47edad7dd2093650cbbfcf5
--- /dev/null
+++ b/dist/client/theme-default/components/VPNav.vue.orig
@@ -0,0 +1,44 @@
+<script setup lang="ts">
+import { provide } from 'vue'
+import { useNav } from '../composables/nav.js'
+import VPNavBar from './VPNavBar.vue'
+import VPNavScreen from './VPNavScreen.vue'
+
+const { isScreenOpen, closeScreen, toggleScreen } = useNav()
+
+provide('close-screen', closeScreen)
+</script>
+
+<template>
+  <header class="VPNav">
+    <VPNavBar :is-screen-open="isScreenOpen" @toggle-screen="toggleScreen">
+      <template #nav-bar-title-before><slot name="nav-bar-title-before" /></template>
+      <template #nav-bar-title-after><slot name="nav-bar-title-after" /></template>
+      <template #nav-bar-content-before><slot name="nav-bar-content-before" /></template>
+      <template #nav-bar-content-after><slot name="nav-bar-content-after" /></template>
+    </VPNavBar>
+    <VPNavScreen :open="isScreenOpen">
+      <template #nav-screen-content-before><slot name="nav-screen-content-before" /></template>
+      <template #nav-screen-content-after><slot name="nav-screen-content-after" /></template>
+    </VPNavScreen>
+  </header>
+</template>
+
+<style scoped>
+.VPNav {
+  position: relative;
+  top: var(--vp-layout-top-height, 0px);
+  /*rtl:ignore*/
+  left: 0;
+  z-index: var(--vp-z-index-nav);
+  width: 100%;
+  pointer-events: none;
+  transition: background-color 0.5s;
+}
+
+@media (min-width: 960px) {
+  .VPNav {
+    position: fixed;
+  }
+}
+</style>
diff --git a/dist/client/theme-default/components/VPSidebar.vue b/dist/client/theme-default/components/VPSidebar.vue
index 8ee83cf035e4cb8b0412b06cc7073f98bc4601a3..d085d2419fc430af2595f52de1f39559067a5efe 100644
--- a/dist/client/theme-default/components/VPSidebar.vue
+++ b/dist/client/theme-default/components/VPSidebar.vue
@@ -105,8 +105,8 @@ watchPostEffect(async () => {
 
 @media (min-width: 1440px) {
   .VPSidebar {
-    padding-left: max(32px, calc((100% - (var(--vp-layout-max-width) - 64px)) / 2));
-    width: calc((100% - (var(--vp-layout-max-width) - 64px)) / 2 + var(--vp-sidebar-width) - 32px);
+    padding-left: max(32px, calc((100vw - (var(--vp-layout-max-width) - 64px)) / 2));
+    width: calc((100vw - (var(--vp-layout-max-width) - 64px)) / 2 + var(--vp-sidebar-width) - 32px);
   }
 }
 
diff --git a/dist/client/theme-default/components/VPSidebar.vue.orig b/dist/client/theme-default/components/VPSidebar.vue.orig
new file mode 100644
index 0000000000000000000000000000000000000000..8ee83cf035e4cb8b0412b06cc7073f98bc4601a3
--- /dev/null
+++ b/dist/client/theme-default/components/VPSidebar.vue.orig
@@ -0,0 +1,142 @@
+<script lang="ts" setup>
+import { ref, watchPostEffect } from 'vue'
+import { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock'
+import { useSidebar } from '../composables/sidebar.js'
+import VPSidebarItem from './VPSidebarItem.vue'
+
+const { sidebarGroups, hasSidebar } = useSidebar()
+
+const props = defineProps<{
+  open: boolean
+}>()
+
+// a11y: focus Nav element when menu has opened
+let navEl = ref<HTMLElement | null>(null)
+
+function lockBodyScroll() {
+  disableBodyScroll(navEl.value!, { reserveScrollBarGap: true })
+}
+
+function unlockBodyScroll() {
+  clearAllBodyScrollLocks()
+}
+
+watchPostEffect(async () => {
+  if (props.open) {
+    lockBodyScroll()
+    navEl.value?.focus()
+  } else {
+    unlockBodyScroll()
+  }
+})
+</script>
+
+<template>
+  <aside
+    v-if="hasSidebar"
+    class="VPSidebar"
+    :class="{ open }"
+    ref="navEl"
+    @click.stop
+  >
+    <div class="curtain" />
+
+    <nav class="nav" id="VPSidebarNav" aria-labelledby="sidebar-aria-label" tabindex="-1">
+      <span class="visually-hidden" id="sidebar-aria-label">
+        Sidebar Navigation
+      </span>
+
+      <slot name="sidebar-nav-before" />
+
+      <div v-for="item in sidebarGroups" :key="item.text" class="group">
+        <VPSidebarItem :item="item" :depth="0" />
+      </div>
+
+      <slot name="sidebar-nav-after" />
+    </nav>
+  </aside>
+</template>
+
+<style scoped>
+.VPSidebar {
+  position: fixed;
+  top: var(--vp-layout-top-height, 0px);
+  bottom: 0;
+  left: 0;
+  z-index: var(--vp-z-index-sidebar);
+  padding: 32px 32px 96px;
+  width: calc(100vw - 64px);
+  max-width: 320px;
+  background-color: var(--vp-sidebar-bg-color);
+  opacity: 0;
+  box-shadow: var(--vp-c-shadow-3);
+  overflow-x: hidden;
+  overflow-y: auto;
+  transform: translateX(-100%);
+  transition: opacity 0.5s, transform 0.25s ease;
+}
+
+.VPSidebar.open {
+  opacity: 1;
+  visibility: visible;
+  transform: translateX(0);
+  transition: opacity 0.25s,
+              transform 0.5s cubic-bezier(0.19, 1, 0.22, 1);
+}
+
+.dark .VPSidebar {
+  box-shadow: var(--vp-shadow-1);
+}
+
+@media (min-width: 960px) {
+  .VPSidebar {
+    z-index: 1;
+    padding-top: var(--vp-nav-height);
+    padding-bottom: 128px;
+    width: var(--vp-sidebar-width);
+    max-width: 100%;
+    background-color: var(--vp-sidebar-bg-color);
+    opacity: 1;
+    visibility: visible;
+    box-shadow: none;
+    transform: translateX(0);
+  }
+}
+
+@media (min-width: 1440px) {
+  .VPSidebar {
+    padding-left: max(32px, calc((100% - (var(--vp-layout-max-width) - 64px)) / 2));
+    width: calc((100% - (var(--vp-layout-max-width) - 64px)) / 2 + var(--vp-sidebar-width) - 32px);
+  }
+}
+
+@media (min-width: 960px) {
+  .curtain {
+    position: sticky;
+    top: -64px;
+    left: 0;
+    z-index: 1;
+    margin-top: calc(var(--vp-nav-height) * -1);
+    margin-right: -32px;
+    margin-left: -32px;
+    height: var(--vp-nav-height);
+    background-color: var(--vp-sidebar-bg-color);
+  }
+}
+
+.nav {
+  outline: 0;
+}
+
+.group + .group {
+  border-top: 1px solid var(--vp-c-divider);
+  padding-top: 10px;
+}
+
+@media (min-width: 960px) {
+  .group {
+    padding-top: 10px;
+    width: calc(var(--vp-sidebar-width) - 64px);
+  }
+}
+</style>
diff --git a/dist/client/theme-default/styles/base.css b/dist/client/theme-default/styles/base.css
index 247fb0ce0eac92ec83a907e821cb1d5a0d1c0615..998e0979ec2e6373d7e3095b12d50d22803d4f7a 100644
--- a/dist/client/theme-default/styles/base.css
+++ b/dist/client/theme-default/styles/base.css
@@ -30,6 +30,7 @@ body {
   text-rendering: optimizeLegibility;
   -webkit-font-smoothing: antialiased;
   -moz-osx-font-smoothing: grayscale;
+  overflow-x: hidden;
 }
 
 main {