struct obj {
    x: int

    create() -> self: new obj {
        self.x = 0
    }
}

fn main() {
    let o, d = obj(), obj()
    var p = o
    if (true) {
        p = d
    }
    else {
        p = d
    }

    @compiler_assert(reference_has_dependencies, p, d)
}

/// [Test]
/// name = "trace/conditional/exhaustive_var_assign"
/// info = """\
///     Compiler correctly traces conditionally assignment of variable to an object
/// """

/// [Expects]
/// success = true
/// output = ""
