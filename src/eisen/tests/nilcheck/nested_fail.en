struct obj {
    x: int
    y: int

    create(x: int, y: int) -> self: obj {
        self.x = x
        self.y = y
    }
}

fn decider(x: int) {
    let a = obj(3, 3)
    let b = obj(4, 4)
    var? q: obj
    q = nil

    if (q == nil) {
        if (x == 3) {
            q = a
        }
        else {
            q = b
            q = nil
        }
    }

    print("%i", q.x)
}

fn main() {
    decider(4)
}


/// [Test]
/// name = "nilcheck/nested_fail"
/// info = """\
///     Test Nilcheck fails correctly for nested if statements
/// """

/// [Expects]
/// success = false

/// [[Expects.Exceptions]]
/// type = "NilUsageException"
/// contains = ">> 27"
